name: "PyPI Publish"
on:
  push:
    tags:
      - '*'
jobs:
# # use a resusable workflow once https://github.com/pypi/warehouse/issues/11096 is fixed
#   PyPIPublish:
#     name: PyPI Publish
#     uses: uc-cdis/.github/.github/workflows/python_package_index_publish.yaml@feat/uvpypi
#     with:
#       PYTHON_VERSION: '3.13'
#       DO_TEST_PUBLISH_FIRST: true
#       USE_UV: true
  uv-PyPI:
    runs-on: ubuntu-latest
    # permissions required for PyPI Trusted Publishing
    # https://docs.pypi.org/trusted-publishers/using-a-publisher/
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up python
        uses: actions/setup-python@v6
        with:
          python-version: 3.13

      - name: Getting information
        run: |
          echo github.ref=${{ github.ref }}
        shell: bash

      # following uv's official guide: https://docs.astral.sh/uv/guides/integration/github/
      # relies on Trusted Publishing so no tokens are required. See: https://docs.pypi.org/trusted-publishers/
      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install uv dependencies
        run: |
          uv sync --locked --all-extras
          uv tree

      - name: uv Build
        run: |
          uv build -v
        shell: bash

      - name: uv Publish to Test PyPI
        id: test-pypi-uv
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
            echo "Attempting a test publish before a real one. Note that a real one will only trigger on tags."
            uv publish -v --index testpypi

            if [ $? -eq 0 ]; then
                echo "Push to Test PyPI successful, now try installing the pushed package in a fresh virtual env..."
                python -m venv .venv-test-pypi
                source .venv-test-pypi/bin/activate

                pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ ai_harmonization

                if [ $? -eq 0 ]; then
                    echo "Package installation successful, uninstalling..."
                    pip uninstall ai_harmonization
                fi
            fi

      - name: uv Publish to PyPI
        id: prod-pypi-uv
        if: ${{ (steps.test-pypi-uv.outcome == 'success') && startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo "Since this is a tagged release, do a real publish"
          uv publish -v -n

          if [ $? -eq 0 ]; then
              echo "Push to PyPI successful, now try installing the pushed package in a fresh virtual env..."
              python -m venv .venv-pypi
              source .venv-pypi/bin/activate

              pip install ai_harmonization
          fi

      - name: If uv Publish to PyPI Did Not Succeed, Fail Job
        if: ${{ steps.prod-pypi-uv.outcome != 'success' }}
        run: |
          echo "Since this is a tagged release, and the real uv publish failed or didn't run, fail the job"
          exit 1
